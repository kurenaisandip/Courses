1
00:00:00,360 --> 00:00:03,390
Let's now talk about package managers in Linux.

2
00:00:03,630 --> 00:00:09,300
Package managers help you install various software on the Linux system, and when you go through DevOps

3
00:00:09,300 --> 00:00:16,770
and cloud courses, you will install various software such as Web servers, database servers and DevOps

4
00:00:16,770 --> 00:00:19,020
tools or dependent softwares.

5
00:00:19,140 --> 00:00:24,060
And most of these are installed using package managers.

6
00:00:25,340 --> 00:00:31,760
Santos uses an RPM based package manager just like RedHat Enterprise Linux or Fedora.

7
00:00:31,970 --> 00:00:35,210
RPM stands for Red Hat Package Manager.

8
00:00:35,810 --> 00:00:44,420
A software is packaged into a bundle with the extension RPM to install the package, use the RPM command

9
00:00:44,420 --> 00:00:49,640
and the IE option for install and specify the package name.

10
00:00:50,470 --> 00:00:58,630
To uninstall a package, use the dash E option and to query the database and get details about an installed

11
00:00:58,630 --> 00:00:59,380
package.

12
00:00:59,410 --> 00:01:01,540
Use the dash queue option.

13
00:01:02,230 --> 00:01:09,130
So RPM requires you to point it to the exact location where the RPM package is available.

14
00:01:09,370 --> 00:01:12,220
You then install that package on the system.

15
00:01:12,700 --> 00:01:16,870
It does not care about any dependencies that this package may have.

16
00:01:16,900 --> 00:01:25,780
For example, say you were installing another software like Ansible and it requires Python and other

17
00:01:25,780 --> 00:01:27,400
other dependent software.

18
00:01:27,730 --> 00:01:34,720
So simply installing ansible with the RPM command would not take care of installing python and other

19
00:01:34,720 --> 00:01:37,780
dependent libraries if they are not already installed.

20
00:01:37,990 --> 00:01:42,420
And that's why you need a solution that can make these easy for you.

21
00:01:42,430 --> 00:01:49,990
A single command that can query the package, find its location and install all dependencies as well

22
00:01:49,990 --> 00:01:51,790
as the package itself.

23
00:01:52,300 --> 00:01:55,960
That's where package managers like Yum come into play.

24
00:01:56,260 --> 00:02:04,600
Yum is a high level package manager that uses RPM underneath running a simple yum install, Ansible

25
00:02:04,600 --> 00:02:09,100
command installs ansible and all of its dependent packages.

26
00:02:09,490 --> 00:02:10,009
Yum.

27
00:02:10,030 --> 00:02:17,080
Searches software repositories that act as warehouses containing hundreds and thousands of RPM package

28
00:02:17,080 --> 00:02:17,710
files.

29
00:02:17,830 --> 00:02:24,460
These repositories can be local that is installed on your laptop, for example, or on a remote location,

30
00:02:24,460 --> 00:02:32,200
either a secure server in your enterprise or available publicly in the internet under the hood.

31
00:02:32,230 --> 00:02:32,700
Yum.

32
00:02:32,710 --> 00:02:35,830
Still makes use of the RPM package manager.

33
00:02:35,830 --> 00:02:41,830
So when you try to install a package using yum yum searches, these repositories finds the required

34
00:02:41,830 --> 00:02:46,990
packages and dependencies and installs all of them in the right order.

35
00:02:47,470 --> 00:02:52,900
So what is this remote repository and how are packages stored there?

36
00:02:52,900 --> 00:02:56,770
Like how does yum find where a particular package is located?

37
00:02:57,310 --> 00:03:05,800
The information about the repository in a configuration file at PATH slash etsy slash yum repos dot

38
00:03:05,830 --> 00:03:07,060
dd directory.

39
00:03:09,030 --> 00:03:15,240
Every operating system comes bundled with its own set of repositories from which you can install a lot

40
00:03:15,240 --> 00:03:17,370
of commonly used software and tools.

41
00:03:17,460 --> 00:03:24,150
So you might not need to edit the list of repositories, but at times the default set of repositories

42
00:03:24,150 --> 00:03:30,780
may not have the software you need or may not have the latest version of software that you need to install.

43
00:03:30,780 --> 00:03:38,370
So in that case, you will need to configure additional repositories so that you can find those packages.

44
00:03:38,520 --> 00:03:44,610
Instructions to configure additional repositories are usually made available along with the software

45
00:03:44,610 --> 00:03:46,800
itself, and we'll see an example of that.

46
00:03:47,480 --> 00:03:54,800
So to see the list of repositories available on a system, run the Yum Repo List command.

47
00:03:54,800 --> 00:04:00,980
And here we see that there are a set of CentOS repositories such as the base and extra repository as

48
00:04:00,980 --> 00:04:03,800
well as MongoDB and MySQL ones.

49
00:04:03,860 --> 00:04:11,510
So listing the files under the Etsy Repository directory shows the files where these repositories are

50
00:04:11,510 --> 00:04:12,350
configured.

51
00:04:12,380 --> 00:04:18,350
And if you look inside one of these files, you will see the URL of the location where all packages

52
00:04:18,350 --> 00:04:19,220
are stored.

53
00:04:19,640 --> 00:04:27,830
Now, if you visit this URL, you can see the RPM files that YUM will eventually download and install

54
00:04:27,860 --> 00:04:31,340
on your local system with the RPM utility.

55
00:04:31,340 --> 00:04:39,380
So that's kind of how Yum finds a package in this case since we are relying on an existing yum repo

56
00:04:39,380 --> 00:04:40,940
on CentOS.

57
00:04:40,970 --> 00:04:46,400
It takes us to an older version of Ansible, which happens to be version 2.4.

58
00:04:46,430 --> 00:04:50,510
Although the latest version as of this recording is 2.9.

59
00:04:50,780 --> 00:04:57,860
So as I just mentioned, the instructions to configure the repo to install the latest version of Ansible

60
00:04:57,860 --> 00:05:01,130
is available in the Ansible documentation page itself.

61
00:05:01,340 --> 00:05:08,720
So you can configure a new repo using the install command itself and running this command adds a new

62
00:05:08,720 --> 00:05:13,010
repository to your system, which points to the latest version of Ansible.

63
00:05:14,560 --> 00:05:22,120
To see a list of installed or available packages run the Yum List command and followed by the package

64
00:05:22,120 --> 00:05:22,540
name.

65
00:05:22,540 --> 00:05:29,710
If you want to search for a particular package, it provides the package name and version, and if it's

66
00:05:29,710 --> 00:05:37,270
an installed package or just an available package to remove and install package, run the yum remove

67
00:05:37,270 --> 00:05:42,390
command followed by the package name and to list all available versions of a package.

68
00:05:42,400 --> 00:05:47,230
Run the Yum List command, but this time with the show duplicates option.

69
00:05:47,350 --> 00:05:55,030
So here we see two versions of packages for Ansible and we can see that each of these are from two separate

70
00:05:55,030 --> 00:05:56,050
repositories.

71
00:05:56,410 --> 00:06:04,690
One is from the extras repository and the other is from the APL repository to install a specific version

72
00:06:04,690 --> 00:06:05,710
of a package.

73
00:06:05,710 --> 00:06:13,030
Run the Yum install command with the package name followed by a hyphen and the version of the package.

74
00:06:15,910 --> 00:06:17,290
Well, that's it for now.

75
00:06:17,380 --> 00:06:22,390
Head over to the labs and practice working with packages, and I will see you in the next lecture.

