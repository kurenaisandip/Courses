1
00:00:01,500 --> 00:00:07,890
In this lecture, we will learn how to link two resources together by making use of resource attributes.

2
00:00:09,330 --> 00:00:14,970
In the last few lectures, we saw how to use variables to improve the reusability of our code.

3
00:00:15,630 --> 00:00:18,810
Right now we have two resources in our configuration file.

4
00:00:19,320 --> 00:00:24,030
Each of this resource has a set of arguments that are used to create that resource.

5
00:00:24,690 --> 00:00:30,540
For the file resource, we have used the file name and content as the arguments and for the pet resource

6
00:00:30,540 --> 00:00:33,540
we have used the prefix separator and length.

7
00:00:34,770 --> 00:00:39,900
When this configuration is applied, TerraForm creates a file and a random pet resource.

8
00:00:40,560 --> 00:00:46,830
The name of the random pet is displayed on the screen as an ID, which is Mr. BOOL in this case.

9
00:00:48,560 --> 00:00:52,250
As it stands, there is no dependency between these two resources.

10
00:00:52,520 --> 00:00:57,320
But this rarely ever happens in a real world infrastructure provisioning process.

11
00:00:57,980 --> 00:01:01,850
There are bound to be multiple resources that are dependent on each other.

12
00:01:02,550 --> 00:01:03,690
So what?

13
00:01:03,690 --> 00:01:09,270
If you want to make use of the output of one resource and use it as an input for another one?

14
00:01:10,410 --> 00:01:16,080
What if we want the content of the file to use the name generated by the random pet resource?

15
00:01:17,280 --> 00:01:19,620
Currently, the content of the file is set to.

16
00:01:19,650 --> 00:01:21,720
My favorite pet is Mr. Cat.

17
00:01:22,370 --> 00:01:28,250
But what if you want it to be set to the name that is generated by the random pet resource?

18
00:01:29,550 --> 00:01:30,540
To understand this.

19
00:01:30,540 --> 00:01:36,480
Let us jump back to the documentation for the random pet resource in registry dot TerraForm dot IO.

20
00:01:37,310 --> 00:01:42,860
You would have noticed that there are plenty of examples which are provided in the documentation, including

21
00:01:42,860 --> 00:01:44,360
examples for the arguments.

22
00:01:44,360 --> 00:01:50,060
But there is also a section called Attribute reference, which provides the list of attributes written

23
00:01:50,060 --> 00:01:53,450
back from the resource after you run a TerraForm apply.

24
00:01:54,890 --> 00:02:00,680
In this case, the random pet resource returns just one attribute called ID, which is of type string.

25
00:02:01,480 --> 00:02:05,270
The ID is the pet name generated after we run TerraForm apply.

26
00:02:05,290 --> 00:02:06,610
As we have seen before.

27
00:02:08,479 --> 00:02:15,080
Our goal is to make use of the attribute called ID and to make use of it as the content of the local

28
00:02:15,080 --> 00:02:16,130
file resource.

29
00:02:16,920 --> 00:02:20,610
Or this, we can make use of an expression like this.

30
00:02:21,690 --> 00:02:26,370
This expression is used to reference the attribute from the resource called my iPad.

31
00:02:27,030 --> 00:02:32,640
The syntax for using this reference expression is resource type, followed by the resource name and

32
00:02:32,640 --> 00:02:37,020
the attribute to be used, all of which are separated by a period or a dot.

33
00:02:38,120 --> 00:02:41,180
The resource type in this example is random pet.

34
00:02:41,780 --> 00:02:47,780
This is followed by my pet, which is the resource name and the attribute uses ID.

35
00:02:48,530 --> 00:02:53,570
You would have also noticed that we are making use of the dollar symbol, followed by the expression

36
00:02:53,570 --> 00:02:55,730
which is enclosed within curly braces.

37
00:02:56,240 --> 00:02:59,000
This is known as an interpolation sequence.

38
00:02:59,910 --> 00:03:06,600
Since the content argument already uses a string type data, the sequence is used to evaluate the expression

39
00:03:06,600 --> 00:03:08,400
given within the curly braces.

40
00:03:08,520 --> 00:03:13,380
Convert the result to a string and then insert it to the final string like this.

41
00:03:14,350 --> 00:03:20,800
Now let us apply the changes made and allow TerraForm to recreate the local file in the output.

42
00:03:20,830 --> 00:03:26,170
You can see that the content is being replaced to our desired value and it contains the name of the

43
00:03:26,170 --> 00:03:29,380
pet that was generated by the random pet resource.

44
00:03:30,260 --> 00:03:31,530
That's it for this lecture.

45
00:03:31,550 --> 00:03:37,250
Now, let's head over to the hands on labs and explore working with reference, expressions and resource

46
00:03:37,250 --> 00:03:38,690
attributes in TerraForm.

