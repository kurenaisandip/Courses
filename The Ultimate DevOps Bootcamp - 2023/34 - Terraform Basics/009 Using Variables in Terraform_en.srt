1
00:00:01,160 --> 00:00:06,890
In this lecture, we will take a look at the different ways in which we can make use of input variables

2
00:00:06,890 --> 00:00:07,939
in TerraForm.

3
00:00:09,030 --> 00:00:16,170
So far, we have created input variables in TerraForm and assign default values to it based on a variable

4
00:00:16,170 --> 00:00:16,740
type.

5
00:00:17,430 --> 00:00:20,880
This is just one of the ways to pass on values to the variable.

6
00:00:21,720 --> 00:00:26,910
Earlier, we learned that the default parameter in a variable block is optional.

7
00:00:27,850 --> 00:00:31,990
This means that we can very well have our variable block look like this.

8
00:00:32,380 --> 00:00:36,400
But what would happen if we run TerraForm commands now?

9
00:00:36,760 --> 00:00:43,360
When we run TerraForm Apply, we will be prompted to enter values for each variable used in an interactive

10
00:00:43,360 --> 00:00:43,900
mode.

11
00:00:44,560 --> 00:00:50,530
If you do not want to supply values in an interactive mode, we can also make use of command line flags

12
00:00:50,530 --> 00:00:51,460
like this.

13
00:00:52,590 --> 00:00:58,680
With the TerraForm Command, we can make use of the dashboard option with the variable name equals to

14
00:00:58,680 --> 00:01:00,090
the value format.

15
00:01:00,630 --> 00:01:06,870
We can pass an as many variables as we want with this method by making use of the dashboard flag multiple

16
00:01:06,870 --> 00:01:07,500
times.

17
00:01:08,160 --> 00:01:14,850
We can also make use of environment variables with the F, underscore waas underscore followed by the

18
00:01:14,850 --> 00:01:17,580
name of a declared variable like this.

19
00:01:18,470 --> 00:01:24,950
In this example, the F underscore waas underscore file name sets the value of the variable called file

20
00:01:24,950 --> 00:01:29,060
name to the value slash root slash postcode.

21
00:01:29,690 --> 00:01:34,130
And similarly, the variable called length now has the value of two.

22
00:01:34,850 --> 00:01:41,120
And finally, when we're dealing with a lot of variables, we can load values by making use of variable

23
00:01:41,120 --> 00:01:42,920
definition files like this.

24
00:01:43,790 --> 00:01:50,940
These variable definition files can be named anything but should always end in either false or false.

25
00:01:51,200 --> 00:01:51,950
JSON.

26
00:01:52,770 --> 00:01:58,520
Here we have declared variables and the values in a file called TerraForm to force.

27
00:01:59,380 --> 00:02:04,570
If you look at the syntax used to create this file, you'll observe that this is using the same syntax

28
00:02:04,570 --> 00:02:08,560
of an SQL file, but it only consists of variable assignments.

29
00:02:09,560 --> 00:02:18,020
The variable definition file if called TerraForm offers or from fast JSON or by any other name ending

30
00:02:18,020 --> 00:02:25,190
with dot auto dot force or auto fast JSON will be automatically loaded by TerraForm.

31
00:02:26,210 --> 00:02:33,200
If you use any other file name such as variable F force, for example, you will have to pass it along

32
00:02:33,200 --> 00:02:37,520
with a command line flag called dash four dash file like this.

33
00:02:38,880 --> 00:02:44,400
Finally, it is important to note that we can use any of the options that we have seen in this lecture

34
00:02:44,400 --> 00:02:46,470
to assign values to the variables.

35
00:02:47,070 --> 00:02:53,070
But if we use multiple ways to assign values for the same variable that a form follows, the variable

36
00:02:53,070 --> 00:02:56,490
definition precedence to understand which value it should accept.

37
00:02:57,210 --> 00:03:00,360
To illustrate this, let us make use of a simple example.

38
00:03:00,930 --> 00:03:07,050
In this case, we have a main configuration file with a single resource, a local file, which will

39
00:03:07,050 --> 00:03:11,010
create file at a path declared in a variable called file name.

40
00:03:11,770 --> 00:03:13,780
In the variables file.

41
00:03:13,780 --> 00:03:17,140
We have not specified a default value for this variable.

42
00:03:18,210 --> 00:03:22,020
And we have assigned different values to this variable in multiple ways.

43
00:03:22,930 --> 00:03:28,720
We have exported the environment variable called tf underscore waas underscore file name with the value

44
00:03:28,720 --> 00:03:31,690
of slash root slash cats dot text.

45
00:03:32,910 --> 00:03:39,900
The TerraForm ETF for file has a value of slash root slash stakes for the same variable.

46
00:03:40,760 --> 00:03:47,690
We have also made use of a variable definition file with the name variable auto force with the value

47
00:03:47,690 --> 00:03:50,930
of slash root slash hypertext.

48
00:03:51,020 --> 00:03:57,440
And finally, we are also making use of the Dash war option while running the TerraForm Apply Command

49
00:03:57,440 --> 00:04:00,880
with the value of slash, root slash best FedEx.

50
00:04:01,190 --> 00:04:05,180
So in this case, which one of these values would be accepted?

51
00:04:05,840 --> 00:04:09,890
There are form follows a variable definition precedence order to determine this.

52
00:04:10,690 --> 00:04:13,480
First it loads the environment variables.

53
00:04:14,510 --> 00:04:18,260
Next the value in the TerraForm ETF was file.

54
00:04:19,410 --> 00:04:27,930
This is followed by any file that ends with the dot auto, dot f or dot auto for JSON in an alphabetical

55
00:04:27,930 --> 00:04:28,530
order.

56
00:04:29,870 --> 00:04:36,800
And finally, TerraForm considers the command line flag of war or dash war dash file, which takes the

57
00:04:36,800 --> 00:04:40,880
highest priority and will overwrite any of the previous values.

58
00:04:41,720 --> 00:04:48,380
In this case, the variable file name will be assigned the value of slash route slash best text.

59
00:04:49,650 --> 00:04:51,000
That's it for this lecture.

60
00:04:51,030 --> 00:04:56,730
Let's head over to the hands on lab and practice working with the concepts that we learned in this lecture.

