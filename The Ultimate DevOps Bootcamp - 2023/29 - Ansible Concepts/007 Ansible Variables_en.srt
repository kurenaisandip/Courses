1
00:00:00,950 --> 00:00:03,950
We will now look at variables and ansible.

2
00:00:04,810 --> 00:00:06,610
So what are variables?

3
00:00:06,610 --> 00:00:10,570
Just like any other scripting or programming language.

4
00:00:10,660 --> 00:00:15,350
Variables are used to store values that varies with different items.

5
00:00:15,370 --> 00:00:21,340
For example, let's say we are trying to perform the same operation of applying patches to hundreds

6
00:00:21,340 --> 00:00:22,210
of servers.

7
00:00:22,300 --> 00:00:26,650
We only need a single playbook for all 100 servers.

8
00:00:26,680 --> 00:00:33,790
However, it's the variables that store information about the different host names, usernames or passwords

9
00:00:33,790 --> 00:00:35,740
that are different for each server.

10
00:00:36,190 --> 00:00:41,530
We have already worked with variables earlier when we worked in the inventory section.

11
00:00:41,710 --> 00:00:48,640
If you remember in an inventory file that looks like this, the ansible host ansible connection, ansible

12
00:00:48,700 --> 00:00:52,510
SSH paths are all examples of variables.

13
00:00:52,510 --> 00:00:56,440
We can define as many variables as required like this.

14
00:00:56,980 --> 00:01:00,070
We could also define variables inside the playbook.

15
00:01:00,310 --> 00:01:07,330
This is a playbook we created earlier to add a DNS entry into the series of action file.

16
00:01:07,360 --> 00:01:14,850
To add a variable, we could simply add a var directive followed by variables in a key value pair format.

17
00:01:14,860 --> 00:01:19,420
In this case DNS server followed by the DNS server IP.

18
00:01:20,020 --> 00:01:25,300
We can also have variables defined in a separate file dedicated for variables.

19
00:01:25,630 --> 00:01:30,280
We will learn about this more later when we talk about includes and roles.

20
00:01:31,240 --> 00:01:35,020
So we have now defined variables, but how do we use them?

21
00:01:35,410 --> 00:01:41,290
In the previous playbook we have defined a variable DNS server, but we have not used it anywhere.

22
00:01:41,800 --> 00:01:43,960
What would be the right place to use that?

23
00:01:44,290 --> 00:01:51,100
In this line here where we defined the name server IP address, we could replace the hardcoded value

24
00:01:51,100 --> 00:01:52,960
with the value from the variable.

25
00:01:53,320 --> 00:02:00,910
To use a variable, simply enter the variable name and closed in double braces or curly brackets like

26
00:02:00,910 --> 00:02:01,420
this.

27
00:02:01,780 --> 00:02:07,030
When we run the playbook, Ansible will replace it with the value in the variable.

28
00:02:08,240 --> 00:02:09,889
Let's look at another example.

29
00:02:10,009 --> 00:02:15,950
This is a longer playbook that is used to set multiple firewall configurations, which has a number

30
00:02:15,950 --> 00:02:17,690
of values hardcoded in it.

31
00:02:18,140 --> 00:02:23,990
If someone else wanted to reuse this playbook, he would have to modify the playbook to change these

32
00:02:23,990 --> 00:02:24,830
values.

33
00:02:25,130 --> 00:02:32,450
If these values that can vary are moved to the inventory file and refer to it in the playbook using

34
00:02:32,450 --> 00:02:39,410
double curly braces, we could get away with modifying the inventory file alone in the future and not

35
00:02:39,410 --> 00:02:41,780
have to modify the playbook itself.

36
00:02:42,940 --> 00:02:48,240
And even better way to do this would be to move the variables into a file in the name of the host,

37
00:02:48,250 --> 00:02:50,350
in this case, Web HTML.

38
00:02:50,590 --> 00:02:58,030
This is now a host variable file, and all values defined in this file are available for use by the

39
00:02:58,030 --> 00:03:01,360
playbook when it is run for that host.

40
00:03:01,840 --> 00:03:04,420
This way it is better organized.

41
00:03:05,290 --> 00:03:12,310
Remember this format we are using to use variables in playbooks is called Jinja two templating.

42
00:03:12,990 --> 00:03:18,990
We have an entire course on ginger to templating for the absolute beginners on Code Cloud.

43
00:03:18,990 --> 00:03:21,030
So check it out when you get time.

44
00:03:21,830 --> 00:03:27,860
Finally, while using variables with ginger to templating, remember to enclose it within codes if you're

45
00:03:27,860 --> 00:03:29,870
starting your assignment with the variable.

46
00:03:30,140 --> 00:03:37,280
However, if the variable is in between a sentence like this, then that is not really required.

47
00:03:38,590 --> 00:03:43,480
Let's head over to exercises to play around with variables in coding exercises.

