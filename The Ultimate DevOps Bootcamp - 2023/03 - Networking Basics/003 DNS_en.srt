1
00:00:00,120 --> 00:00:05,550
In this video we get introduced to Dense in Linux for the absolute Beginners.

2
00:00:05,670 --> 00:00:11,700
We will discuss the basic concepts and view some commands that will help us explore DNS configuration

3
00:00:11,700 --> 00:00:14,670
on hosts, specifically Linux Host.

4
00:00:15,060 --> 00:00:19,920
At the end of this section you will go through a practice test where you're given a set of challenges

5
00:00:19,920 --> 00:00:26,940
related to DNS and are asked to solve them on a live, practical hands on lab environment right in your

6
00:00:26,940 --> 00:00:27,510
browser.

7
00:00:28,670 --> 00:00:35,330
We have two computers A and B, both part of the same network, and they've been assigned with IP addresses,

8
00:00:35,330 --> 00:00:38,360
192 168, 1.10 and 1.11.

9
00:00:38,720 --> 00:00:43,010
You're able to ping one computer from the other using the other computer's IP address.

10
00:00:43,490 --> 00:00:46,640
You know that System B has database services on them.

11
00:00:46,640 --> 00:00:51,830
So instead of having to remember the IP address of the system B, you decide to give it a name.

12
00:00:51,860 --> 00:00:59,910
DB Going forward, you would like to ping system B using the name DB instead of its IP address.

13
00:00:59,930 --> 00:01:06,620
If you try to ping DB now, you would see that host A is unaware of a host named DB.

14
00:01:07,040 --> 00:01:08,540
So how do you fix that?

15
00:01:08,630 --> 00:01:16,300
Basically you want to tell system A that system B at IP address 192 168 1.11 has a name DB.

16
00:01:16,610 --> 00:01:22,790
We want to tell system A that when I say DB, I mean the IP 192 168 1.11.

17
00:01:23,060 --> 00:01:29,180
You can do that by adding an entry into the C host file on system A mentioned the IP address and the

18
00:01:29,180 --> 00:01:31,430
name you want your host to C system.

19
00:01:31,460 --> 00:01:40,790
B As we told system A that the IP at 192 168 1.11 is a host named DB Pins two DB now gets sent to the

20
00:01:40,790 --> 00:01:42,710
correct IP and are successful.

21
00:01:43,130 --> 00:01:50,960
Now there is an important point to note here with all System A that the IP at 192 168 1.11 is a host

22
00:01:50,960 --> 00:01:52,850
named DB host.

23
00:01:52,880 --> 00:01:54,480
A takes that for granted.

24
00:01:54,500 --> 00:02:01,880
Whatever we put in the C host file is the source of truth for host A, but that need not be the truth.

25
00:02:01,910 --> 00:02:06,980
Host A does not check to make sure if System B's actual name is DB.

26
00:02:07,160 --> 00:02:15,170
For instance, running a hostname command on System B reveals that it is named host two but host it

27
00:02:15,200 --> 00:02:16,110
doesn't care.

28
00:02:16,130 --> 00:02:18,500
It goes by what's in the host file.

29
00:02:20,090 --> 00:02:24,520
You can even fool system A to believing that system B is Google.

30
00:02:24,530 --> 00:02:31,550
Just add an entry into the host file with an IP mapping to w ww google.com, then ping google and you

31
00:02:31,550 --> 00:02:33,500
will get a response from system B.

32
00:02:33,890 --> 00:02:39,620
So we have two names pointing to the same system, one as SDB and another as Google.

33
00:02:39,620 --> 00:02:42,290
And we can use either names to reach system B.

34
00:02:43,830 --> 00:02:49,620
You can have as many names as you want for as many servers as you want in the Etsy host file.

35
00:02:50,220 --> 00:02:56,310
Every time we reference another host by its name from host a through a pin command or SSH command or

36
00:02:56,310 --> 00:03:02,610
through any of the applications or tools within this system, it looks into its Etsy host file to find

37
00:03:02,610 --> 00:03:04,950
out the IP address of that host.

38
00:03:05,310 --> 00:03:10,620
Translating hostname to IP address this way is known as name resolution.

39
00:03:11,440 --> 00:03:18,220
Within a small network of few systems, you can easily get away with the entries in the Etsy host file.

40
00:03:18,460 --> 00:03:23,080
On each system I specify which are the other systems in the environment.

41
00:03:23,080 --> 00:03:25,630
And that's how it was done in the past.

42
00:03:27,160 --> 00:03:32,680
Until the environment grew and these files got filled with too many entries, and managing these became

43
00:03:32,680 --> 00:03:33,490
too hard.

44
00:03:33,670 --> 00:03:39,520
If one of the servers IP changed, you would need to modify the entries in all of these hosts.

45
00:03:39,520 --> 00:03:46,880
And that's where we decided to move all these entries into a single server who will manage it centrally.

46
00:03:46,900 --> 00:03:53,920
We call that our DNS server and then we point all hosts to look up that server if they need to resolve

47
00:03:53,920 --> 00:03:58,900
a HOSTNAME to an IP address instead of its own Etsy host files.

48
00:03:59,260 --> 00:04:00,540
So how do we do that?

49
00:04:00,550 --> 00:04:04,060
How do we point our host to a DNS server?

50
00:04:04,510 --> 00:04:08,870
Our DNS server has the IP 192 168 1.100.

51
00:04:08,890 --> 00:04:17,529
Every host has a DNS resolution configuration file at ETSI Resolved conf you add an entry into it specifying

52
00:04:17,529 --> 00:04:19,540
the address of the DNS server.

53
00:04:19,750 --> 00:04:26,350
We say name server and point it to one 92.1 60 8.1. 100 and that should be it.

54
00:04:26,380 --> 00:04:32,650
Once this is configured on all of your host, every time a host comes up across a host name that it

55
00:04:32,650 --> 00:04:36,430
does not know about, it looks it up from the DNS server.

56
00:04:36,760 --> 00:04:43,540
If the IP of any of the host was to change, simply update the DNS server and all hosts should resolve

57
00:04:43,540 --> 00:04:45,730
the new IP address going forward.

58
00:04:45,940 --> 00:04:53,080
You no longer need any entries in the C host file in any of the hosts, but that does not mean you can't

59
00:04:53,080 --> 00:04:54,840
have entries in host file.

60
00:04:54,850 --> 00:04:56,230
You still can.

61
00:04:56,230 --> 00:05:00,940
For example, say you were to provision a test server for your own needs.

62
00:05:01,480 --> 00:05:05,860
You don't think others would need to resolve the server by its name, so it need not be added to the

63
00:05:05,860 --> 00:05:06,750
DNS server.

64
00:05:06,760 --> 00:05:13,540
In that case, you can add an entry into your host at c host file to resolve this server.

65
00:05:13,540 --> 00:05:15,130
You can now resolve the server.

66
00:05:15,130 --> 00:05:18,130
However, no other system will be able to do that.

67
00:05:18,130 --> 00:05:24,880
So a system is able to use host name to IP mapping from the C host file locally as well as from a remote

68
00:05:24,880 --> 00:05:25,930
DNS server.

69
00:05:26,410 --> 00:05:33,310
What if you have an entry in both places, one in your Etsy host file and another in DNS?

70
00:05:33,310 --> 00:05:40,780
I have an entry in my local file set to 1921681.115 and someone added an entry for the same host to

71
00:05:40,780 --> 00:05:44,470
19221681.116 on the DNS server.

72
00:05:44,770 --> 00:05:51,550
In that case, the host first looks in the local Etsy host file and then looks at the name server.

73
00:05:51,550 --> 00:05:56,370
So if it finds the entry in the local Etsy host file, it uses that.

74
00:05:56,380 --> 00:06:02,200
If not, it looks for that host in the DNS server, but that order can be changed.

75
00:06:02,200 --> 00:06:10,090
The order is defined by an entry in the file at C and switch conf the line with the host entry.

76
00:06:10,090 --> 00:06:15,550
As you can see, the order is first files and then followed by DNS files.

77
00:06:15,550 --> 00:06:20,020
Refers to ETSI, host file and DNS refers to the DNS server.

78
00:06:20,020 --> 00:06:26,620
So for every hostname, the host first looks into the etsy host file and if it cannot find it there,

79
00:06:26,620 --> 00:06:28,690
it then looks at the DNS server.

80
00:06:28,780 --> 00:06:33,100
This order can be modified by editing this entry in the file.

81
00:06:33,700 --> 00:06:40,360
As per this order, our host would resolve the test server to 192 168 1.115.

82
00:06:40,630 --> 00:06:44,200
What if you try to ping a server that is not in either list?

83
00:06:44,200 --> 00:06:48,160
For example, I try and ping WW facebook.com.

84
00:06:48,160 --> 00:06:52,990
I don't have facebook.com in my etsy host file and I don't have it in my DNS server either.

85
00:06:52,990 --> 00:06:54,880
So in that case it will fail.

86
00:06:55,060 --> 00:07:01,360
You can add another entry into your resolved file to point to a name server that knows Facebook for

87
00:07:01,360 --> 00:07:01,930
example.

88
00:07:01,930 --> 00:07:09,940
8.8.8.8 is a common well known public name server available on the internet hosted by Google that knows

89
00:07:09,940 --> 00:07:11,890
about all websites on the internet.

90
00:07:12,130 --> 00:07:17,020
You can have multiple name servers like this configured on your host, but then you will have to configure

91
00:07:17,020 --> 00:07:19,360
that on all your host in their network.

92
00:07:19,390 --> 00:07:23,410
You already have a name server within your network configured on all the hosts.

93
00:07:23,410 --> 00:07:29,920
So in that case you can configure the DNS server itself to forward any unknown host names to the public

94
00:07:29,920 --> 00:07:31,570
name server on the internet.

95
00:07:32,200 --> 00:07:35,920
You should now be able to ping external sites such as Facebook.com.

96
00:07:36,430 --> 00:07:42,460
Until now, we've been just trying to read systems with their names like Web, DB, NFS, etc. but we

97
00:07:42,460 --> 00:07:44,530
just tried to ping Facebook at W.

98
00:07:44,530 --> 00:07:46,450
What facebook.com?

99
00:07:46,690 --> 00:07:50,170
What is this name with your w w w and dot com at the end?

100
00:07:50,200 --> 00:07:55,330
It's called a domain name and it is how IP is translate to names that we can remember on the public

101
00:07:55,330 --> 00:07:57,640
internet, just like how we did for our host.

102
00:07:58,030 --> 00:08:02,830
Now the reason they are in this format separated by dots is to group like things together.

103
00:08:03,250 --> 00:08:09,250
The last portion of the domain name, the dot coms, the dot nets, dot, edu, dot org, etc. are the

104
00:08:09,250 --> 00:08:15,130
top level domains that represent the intent of the website dot com for commercial or general purpose.

105
00:08:15,160 --> 00:08:22,510
Dot net for network dot edu for educational organizations and dot org for non profit organizations.

106
00:08:23,240 --> 00:08:24,860
Let's look at one in particular.

107
00:08:24,860 --> 00:08:28,070
In Google's case, the dot is the root.

108
00:08:28,220 --> 00:08:29,800
That's where everything starts.

109
00:08:29,810 --> 00:08:32,370
Dot com is a top level domain.

110
00:08:32,390 --> 00:08:38,330
Google is the domain name assigned to Google and w w w is a sub domain.

111
00:08:38,690 --> 00:08:41,570
The sub domains help in further grouping things together.

112
00:08:41,570 --> 00:08:46,670
Under Google, for example, Google's map service is available at maps dot google.com.

113
00:08:46,820 --> 00:08:48,720
So maps is a sub domain.

114
00:08:48,740 --> 00:08:52,640
Google's storage service is available at drive on Google.com.

115
00:08:52,970 --> 00:08:54,840
Mobile apps are available at Appstore.

116
00:08:54,870 --> 00:08:55,940
Google.com.

117
00:08:55,940 --> 00:08:59,870
Google's email service are available at mail, dot Google.com.

118
00:09:00,020 --> 00:09:05,260
You can further divide each of these into as many subdomains based on your needs.

119
00:09:05,270 --> 00:09:08,150
So you begin to see a tree structure forming.

120
00:09:09,820 --> 00:09:16,060
When you try to reach any of these domain names, say apps dot Google.com from within your organization,

121
00:09:16,060 --> 00:09:20,350
your request first hits your organization's internal DNS server.

122
00:09:20,530 --> 00:09:25,570
It doesn't know who apps or Google is, so it forwards your request to the Internet.

123
00:09:25,750 --> 00:09:31,180
On the internet, the IP address of the server serving Appstore Google.com may be resolved with the

124
00:09:31,180 --> 00:09:33,220
help of multiple DNS servers.

125
00:09:33,490 --> 00:09:39,530
A root DNS server looks at your request and points you to a DNS server serving dot coms dot com.

126
00:09:39,550 --> 00:09:45,100
DNS server looks at your request and forwards you to Google and Google's DNS server provides you the

127
00:09:45,100 --> 00:09:48,910
IP of the server serving the app's applications.

128
00:09:49,390 --> 00:09:56,620
In order to speed up all future results, your organization's DNS server may choose to cache this IP

129
00:09:56,650 --> 00:10:01,180
for a period of time, typically a few seconds up to a few minutes.

130
00:10:01,570 --> 00:10:05,770
That way it doesn't have to go through the whole process again each time.

131
00:10:06,560 --> 00:10:08,660
So that was out in the public.

132
00:10:08,780 --> 00:10:10,580
What about your organization?

133
00:10:10,670 --> 00:10:15,680
Your organization can have a similar structure to, for example, your organization could be called

134
00:10:15,680 --> 00:10:19,940
as my company dot com and have multiple sub domains for each purpose.

135
00:10:19,940 --> 00:10:26,060
The w w w for external facing website mail dot my company dot com for accessing your organization's

136
00:10:26,060 --> 00:10:32,240
mail drive for accessing storage page or company dot com for accessing the payroll application, HR

137
00:10:32,240 --> 00:10:39,170
for accessing HR application, etc. All of these are configured in your organization's internal DNS

138
00:10:39,170 --> 00:10:39,830
server.

139
00:10:40,830 --> 00:10:46,560
The reason we discussed all of these is to understand another entry in the ETSI resolved or common file.

140
00:10:46,890 --> 00:10:51,430
Remember, this is the file where we configure the DNS server to be used for our host.

141
00:10:51,450 --> 00:10:56,640
With that, we were able to resolve servers in your organization with just their names like Web.

142
00:10:56,670 --> 00:11:02,490
We have now introduced more standard domain names like web dot, my company dot com or DB, dot, my

143
00:11:02,490 --> 00:11:04,020
company, dot com, etc..

144
00:11:04,050 --> 00:11:07,030
Now when you ping web, you can no longer get a response.

145
00:11:07,050 --> 00:11:12,330
Of course, this is because we are trying to ping web, but there is no record for by the name web on

146
00:11:12,330 --> 00:11:13,470
my DNS server.

147
00:11:13,500 --> 00:11:15,930
Instead it is web dot my company dot com.

148
00:11:15,930 --> 00:11:18,990
So you have to use web dot my company dot com.

149
00:11:19,560 --> 00:11:24,840
Now I can understand if someone outside our company wants to access our web server, he would have to

150
00:11:24,840 --> 00:11:26,670
use web on my company dot com.

151
00:11:26,670 --> 00:11:32,670
But within our company, your own company, you want to simply address the web server by its first name

152
00:11:32,670 --> 00:11:33,250
web.

153
00:11:33,270 --> 00:11:38,070
Just like how you address other members in your family simply by their first names, which is not the

154
00:11:38,070 --> 00:11:42,600
case when someone outside your family addresses us, them using their full names.

155
00:11:42,630 --> 00:11:48,390
So what do you do to configure web to resolve my web dot, my company dot com?

156
00:11:48,900 --> 00:11:53,440
You want to say when I say web, I mean web dot my company dot com.

157
00:11:53,460 --> 00:12:01,470
For that you make an entry into your hosts at C resolved or conf file called search and specify the

158
00:12:01,470 --> 00:12:03,360
domain name you want to append.

159
00:12:03,600 --> 00:12:09,470
Next time you try to ping web you will see it actually tries web dot my company dot com.

160
00:12:09,480 --> 00:12:13,140
Now your host is intelligent enough to exclude the search domain.

161
00:12:13,140 --> 00:12:19,080
If you specify a domain in your query like this, you may also provide additional search domains like

162
00:12:19,080 --> 00:12:19,410
this.

163
00:12:19,410 --> 00:12:26,040
So it would mean when I say web, I mean web dot my company dot com or web dot product, my company

164
00:12:26,040 --> 00:12:26,700
dot com.

165
00:12:27,120 --> 00:12:32,130
So your host would try searching all of these domain names when you look for a host name.

166
00:12:32,670 --> 00:12:35,280
Finally, a word about record types.

167
00:12:35,280 --> 00:12:38,550
So how are the records stored in the DNS server?

168
00:12:38,700 --> 00:12:43,250
We know that it stores IP to host names that's known as air records.

169
00:12:43,260 --> 00:12:48,480
Storing IPV six to host names is known as Quad A records mapping.

170
00:12:48,480 --> 00:12:51,860
One name to another name is called C Name Records.

171
00:12:51,870 --> 00:12:57,510
For example, you may have multiple aliases for the same application, like a food delivery service

172
00:12:57,600 --> 00:13:00,390
may also be reached at eat or Hungry.

173
00:13:00,600 --> 00:13:04,830
That's where a see name record is used, name to name mapping.

174
00:13:05,160 --> 00:13:08,190
There are many more, but that's all we're going to look at for now.

175
00:13:08,760 --> 00:13:13,970
Now, Ping may not always be the right tool to test DNS resolution.

176
00:13:13,980 --> 00:13:17,190
There are a few other tools as well, such as NSS lookup.

177
00:13:17,190 --> 00:13:21,840
You can use NSS lookup to query a hostname from a DNS server.

178
00:13:22,050 --> 00:13:27,960
But remember this lookup does not consider the entries in the local C host file.

179
00:13:27,960 --> 00:13:33,750
So if you add an entry into the local FC host file for your web application and if you try to do an

180
00:13:33,750 --> 00:13:37,650
NSS lookup for that web application, it is not going to find it.

181
00:13:38,160 --> 00:13:45,420
The entry for your web application has to be present in your DNS server and US lookup only queries the

182
00:13:45,420 --> 00:13:46,560
DNS server.

183
00:13:47,220 --> 00:13:48,660
The same goes with dig.

184
00:13:48,960 --> 00:13:52,680
Dig is another useful tool to test DNS name resolution.

185
00:13:52,680 --> 00:13:57,330
It returns more details in a similar form as is stored on the server.

186
00:13:57,450 --> 00:14:02,970
In the upcoming practice exercises section, you will practice viewing, configuring and troubleshooting

187
00:14:02,970 --> 00:14:08,880
DNS in a lab environment on actual systems through some fun and challenging exercises.

188
00:14:09,300 --> 00:14:10,890
Well, that's it for this lecture.

